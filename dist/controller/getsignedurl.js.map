{"version":3,"sources":["../../src/controller/getsignedurl.js"],"names":["uuidv4","require","config","db","api","s3","S3","update","accessKeyId","process","env","ACCESSKEY_ID","secretAccessKey","S3SECRETACCESS_KEY","region","signatureVersion","get","req","res","next","console","log","params","bucket","acl","Metadata","contentType","getSignedUrl","err","signedUrl","status","json","message","postUrl","getUrl","split"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;AAEA,IAAMA,SAASC,QAAQ,SAAR,CAAf;;kBAEc,gBAAoB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;;AAE9B,MAAIC,MAAM,sBAAV;;AAEA,MAAIC,KAAK,IAAI,iBAAIC,EAAR,EAAT;AACAD,KAAGH,MAAH,CAAUK,MAAV,CAAiB;AACfC,iBAAaC,QAAQC,GAAR,CAAYC,YADV;AAEfC,qBAAiBH,QAAQC,GAAR,CAAYG,kBAFd;AAGfC,YAAQZ,OAAOY,MAHA;AAIfC,sBAAkBb,OAAOa;AAJV,GAAjB;;AAOF;AACAX,MAAIY,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/BC,YAAQC,GAAR,CAAY,aAAZ;AACA,QAAIC,SAAS;AACX,gBAAUpB,OAAOqB,MADN;AAEX,aAAOvB,QAFI;AAGX,iBAAW,GAHA;AAIX,aAAOE,OAAOsB,GAJH;AAKXC,gBAAU;AACR,wBAAgBvB,OAAOwB;AADf;AALC,KAAb;AASArB,OAAGsB,YAAH,CAAgB,WAAhB,EAA6BL,MAA7B,EAAqC,UAACM,GAAD,EAAMC,SAAN,EAAoB;AACvD,UAAID,GAAJ,EAAS;AACPV,YAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAASJ,GAAV,EAArB;AACA;AACD;AACDR,cAAQC,GAAR,CAAYQ,SAAZ;AACEX,UAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBE,iBAASJ,SADU;AAEnBK,gBAAQL,UAAUM,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAFW,EAArB;AAGH,KATD;AAUD,GArBD;AAsBA,SAAO/B,GAAP;AACD,C","file":"getsignedurl.js","sourcesContent":["import aws from 'aws-sdk';\nimport bodyParser from 'body-parser';\nimport { Router } from 'express';\nimport config from '../config';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nconst uuidv4 = require('uuid/v4');\n\nexport default({ config, db }) => {\n\n    let api = Router();\n\n    var s3 = new aws.S3();\n    s3.config.update({\n      accessKeyId: process.env.ACCESSKEY_ID,\n      secretAccessKey: process.env.S3SECRETACCESS_KEY,\n      region: config.region,\n      signatureVersion: config.signatureVersion,\n    });\n\n  // /v1/getsignedurl/\n  api.get('/', (req, res, next) => {\n    console.log('Getting url');\n    var params = {\n      'Bucket': config.bucket,\n      'Key': uuidv4(),\n      'Expires': 200,\n      'ACL': config.acl,\n      Metadata: {\n        'Content-Type': config.contentType\n      }\n    };\n    s3.getSignedUrl('putObject', params, (err, signedUrl) => {\n      if (err) {\n        res.status(500).json({message: err});\n        return;\n      }\n      console.log(signedUrl);\n        res.status(200).json({\n          postUrl: signedUrl,\n          getUrl: signedUrl.split(\"?\")[0]})\n    });\n  });\n  return api;\n}\n"]}